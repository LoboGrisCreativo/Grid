form_focus=function(){var n=$('input[type="text"]'),e=$(this).attr("placeholder");n.each(function(){var n=($('input[type="text"]'),$(this).attr("placeholder"));$(this).val().length>0||void 0!==n?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")}),n.on("change",function(){0!==$(this).val().length||void 0!==e?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")}),n.on("focusin",function(){$(this).val().length>=0||void 0!==e?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")}),n.on("focusout",function(){0!==$(this).val().length?$(this).siblings(".label-label").addClass("floating-label"):void 0!==$(this).attr("placeholder")?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")})},form_focus(),header=function(){header_scroll=function(){$(window).scroll(function(){var n=$(window).scrollTop();n<this.beforeTop?$("header").slideDown(300):$("header").slideUp(300),this.beforeTop=n})},activeMenu=function(){$("header li").on("click",function(){$("header li").removeClass("active"),$(this).addClass("active")})},header_dropdown=function(){$("header a").click(function(){$(this).siblings(".dropdownMenu").slideToggle(300)}).on("focusout",function(){$(this).siblings(".dropdownMenu").fadeOut(300)}),$(document).keyup(function(n){27===n.keyCode&&$(".enlaces a").siblings(".dropdownMenu").hide()})},header_scroll(),header_dropdown(),activeMenu()},header(),init=function(){dropdownMenu(".header__nav__menuHeader__listItem__enlace"),slideMenu("#btn-menu"),scrollToTop(".scrollTop"),activeMenu(".header__nav__menuHeader__listItem"),acordeon(".acordeon-title",".acordeon-paragraph"),llamadaAjax(".li-item"),pegamento(".contentfixed")},headerFixed=function(n){var e="header_fixed";$(window).on("scroll",function(){$(window).scrollTop()>30?$(n).addClass(e):$(n).removeClass(e)})},pegamento=function(n){$(window).scroll(function(){var e=$(window).scrollTop();e>30?$(n).addClass("fixed"):$(n).removeClass("fixed")})},seguimiento=function(n,e){$(n).on("scrollSpy:enter",function(){var n="#"+$(this).attr("id");$(e).each(function(){var t=$(this).children("a"),o=t.attr("href");n==o&&($(e).removeClass("active"),$(this).addClass("active"))})}),$(n).on("scrollSpy:exit",function(){var n="#"+$(this).attr("id");$(e).each(function(){var e=$(this).children("a"),t=e.attr("href");n==t&&$(this).removeClass("active")})}),$(n).scrollSpy()},dropdownMenu=function(n){$(".header__nav__menuHeader__listItem__enlace");$(n).click(function(){$(this).siblings(".dropdownMenu").slideToggle(300)}).on("focusout",function(){$(this).siblings(".dropdownMenu").fadeOut(300)})},slideMenu=function(n,e){$(n).on("click",function(n){var e=$(".enlaces");$("body");e.toggleClass("open")}),$(e).on("click",function(){var n=$("#btn-menu");n.removeClass("open"),$("body").css({"padding-left":"0",transition:"all 0.3s"}),$('<div class="overlay"></div>').detach()})},scrollToTop=function(n){$(window).on("scroll",function(){$(window).scrollTop()>80?$(n).slideDown():$(n).slideUp()}),$(n).click(function(){$("body").animate({scrollTop:0},400)})},activeMenu=function(n){$(n).on("click",function(){$(n).removeClass("active"),$(this).addClass("active")})},acordeon=function(n,e){$(n).click(function(){$(this).siblings(e).slideToggle(100),$(this).parent().siblings().find(e).slideUp(),$(this).children().toggleClass("fa-chevron-down fa-chevron-up"),$(this).parent().siblings().find("i").removeClass("fa-chevron-up").addClass("fa-chevron-down")})},llamadaAjax=function(n){$(n).on("click",function(n){var e=$(this).data("href");$.ajax({url:e+".html",async:!0,dataType:"html",success:function(n){$(".content_container").html(n)},error:function(n){$(".content_container").html("<h4>Lo sentimos, se produjo un error</h4>")}})})},$(document).ready(function(){init()}),function(n){n.fn.pluginName=function(e){var t={foo:"bar"},o={},i={init:function(e){return this.each(function(){o=n.extend({},t,e);n(this)})},foo_public_method:function(){}};return i[e]?i[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void n.error('Method "'+e+'" does not exist in pluginName plugin!'):i.init.apply(this,arguments)}}(jQuery),function(n){function e(e,t,o,i){var l=n();return n.each(a,function(n,a){var s=a.offset().top,r=a.offset().left,c=r+a.width(),d=s+a.height(),u=!(r>t||c<i||s>o||d<e);u&&l.push(a)}),l}function t(){++c;var t=l.scrollTop(),o=l.scrollLeft(),i=o+l.width(),a=t+l.height(),r=e(t+d.top,i+d.right,a+d.bottom,o+d.left);n.each(r,function(n,e){var t=e.data("scrollSpy:ticks");"number"!=typeof t&&e.triggerHandler("scrollSpy:enter"),e.data("scrollSpy:ticks",c)}),n.each(s,function(n,e){var t=e.data("scrollSpy:ticks");"number"==typeof t&&t!==c&&(e.triggerHandler("scrollSpy:exit"),e.data("scrollSpy:ticks",null))}),s=r}function o(){l.trigger("scrollSpy:winSize")}function i(n,e,t){var o,i,l,a=null,s=0;t||(t={});var r=function(){s=t.leading===!1?0:u(),a=null,l=n.apply(o,i),o=i=null};return function(){var c=u();s||t.leading!==!1||(s=c);var d=e-(c-s);return o=this,i=arguments,d<=0?(clearTimeout(a),a=null,s=c,l=n.apply(o,i),o=i=null):a||t.trailing===!1||(a=setTimeout(r,d)),l}}var l=n(window),a=[],s=[],r=!1,c=0,d={top:0,right:0,bottom:0,left:0},u=Date.now||function(){return(new Date).getTime()};n.scrollSpy=function(e,o){e=n(e),e.each(function(e,t){a.push(n(t))}),o=o||{throttle:100},d.top=o.offsetTop||0,d.right=o.offsetRight||0,d.bottom=o.offsetBottom||0,d.left=o.offsetLeft||0;var s=i(t,o.throttle||100),c=function(){n(document).ready(s)};return r||(l.on("scroll",c),l.on("resize",c),r=!0),setTimeout(c,0),e},n.winSizeSpy=function(e){return n.winSizeSpy=function(){return l},e=e||{throttle:100},l.on("resize",i(o,e.throttle||100))},n.fn.scrollSpy=function(e){return n.scrollSpy(n(this),e)}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
